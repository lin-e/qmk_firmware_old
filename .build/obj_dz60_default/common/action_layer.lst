   1               		.file	"action_layer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.default_layer_state_set_kb,"ax",@progbits
  11               		.weak	default_layer_state_set_kb
  13               	default_layer_state_set_kb:
  14               	.LFB4:
  15               		.file 1 "./tmk_core/common/action_layer.c"
   1:./tmk_core/common/action_layer.c **** #include <stdint.h>
   2:./tmk_core/common/action_layer.c **** #include "keyboard.h"
   3:./tmk_core/common/action_layer.c **** #include "action.h"
   4:./tmk_core/common/action_layer.c **** #include "util.h"
   5:./tmk_core/common/action_layer.c **** #include "action_layer.h"
   6:./tmk_core/common/action_layer.c **** 
   7:./tmk_core/common/action_layer.c **** #ifdef DEBUG_ACTION
   8:./tmk_core/common/action_layer.c **** #include "debug.h"
   9:./tmk_core/common/action_layer.c **** #else
  10:./tmk_core/common/action_layer.c **** #include "nodebug.h"
  11:./tmk_core/common/action_layer.c **** #endif
  12:./tmk_core/common/action_layer.c **** 
  13:./tmk_core/common/action_layer.c **** 
  14:./tmk_core/common/action_layer.c **** /** \brief Default Layer State
  15:./tmk_core/common/action_layer.c ****  */
  16:./tmk_core/common/action_layer.c **** uint32_t default_layer_state = 0;
  17:./tmk_core/common/action_layer.c **** 
  18:./tmk_core/common/action_layer.c **** /** \brief Default Layer State Set At Keyboard Level
  19:./tmk_core/common/action_layer.c ****  *
  20:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  21:./tmk_core/common/action_layer.c ****  */
  22:./tmk_core/common/action_layer.c **** __attribute__((weak))
  23:./tmk_core/common/action_layer.c **** uint32_t default_layer_state_set_kb(uint32_t state) {
  16               		.loc 1 23 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  24:./tmk_core/common/action_layer.c ****     return state;
  25:./tmk_core/common/action_layer.c **** }
  23               		.loc 1 25 0
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE4:
  28               		.section	.text.default_layer_state_set,"ax",@progbits
  30               	default_layer_state_set:
  31               	.LFB5:
  26:./tmk_core/common/action_layer.c **** 
  27:./tmk_core/common/action_layer.c **** /** \brief Default Layer State Set
  28:./tmk_core/common/action_layer.c ****  *
  29:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  30:./tmk_core/common/action_layer.c ****  */
  31:./tmk_core/common/action_layer.c **** static void default_layer_state_set(uint32_t state)
  32:./tmk_core/common/action_layer.c **** {
  32               		.loc 1 32 0
  33               		.cfi_startproc
  34               	.LVL1:
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  33:./tmk_core/common/action_layer.c ****     state = default_layer_state_set_kb(state);
  39               		.loc 1 33 0
  40 0000 0E94 0000 		call default_layer_state_set_kb
  41               	.LVL2:
  34:./tmk_core/common/action_layer.c ****     debug("default_layer_state: ");
  35:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  36:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  42               		.loc 1 36 0
  43 0004 6093 0000 		sts default_layer_state,r22
  44 0008 7093 0000 		sts default_layer_state+1,r23
  45 000c 8093 0000 		sts default_layer_state+2,r24
  46 0010 9093 0000 		sts default_layer_state+3,r25
  37:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  38:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  47               		.loc 1 38 0
  48 0014 0C94 0000 		jmp clear_keyboard_but_mods
  49               	.LVL3:
  50               		.cfi_endproc
  51               	.LFE5:
  53               		.section	.text.default_layer_debug,"ax",@progbits
  54               	.global	default_layer_debug
  56               	default_layer_debug:
  57               	.LFB6:
  39:./tmk_core/common/action_layer.c **** }
  40:./tmk_core/common/action_layer.c **** 
  41:./tmk_core/common/action_layer.c **** /** \brief Default Layer Print
  42:./tmk_core/common/action_layer.c ****  *
  43:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  44:./tmk_core/common/action_layer.c ****  */
  45:./tmk_core/common/action_layer.c **** void default_layer_debug(void)
  46:./tmk_core/common/action_layer.c **** {
  58               		.loc 1 46 0
  59               		.cfi_startproc
  60               	/* prologue: function */
  61               	/* frame size = 0 */
  62               	/* stack size = 0 */
  63               	.L__stack_usage = 0
  64 0000 0895      		ret
  65               		.cfi_endproc
  66               	.LFE6:
  68               		.section	.text.default_layer_set,"ax",@progbits
  69               	.global	default_layer_set
  71               	default_layer_set:
  72               	.LFB7:
  47:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", default_layer_state, biton32(default_layer_state));
  48:./tmk_core/common/action_layer.c **** }
  49:./tmk_core/common/action_layer.c **** 
  50:./tmk_core/common/action_layer.c **** /** \brief Default Layer Set
  51:./tmk_core/common/action_layer.c ****  *
  52:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  53:./tmk_core/common/action_layer.c ****  */
  54:./tmk_core/common/action_layer.c **** void default_layer_set(uint32_t state)
  55:./tmk_core/common/action_layer.c **** {
  73               		.loc 1 55 0
  74               		.cfi_startproc
  75               	.LVL4:
  76               	/* prologue: function */
  77               	/* frame size = 0 */
  78               	/* stack size = 0 */
  79               	.L__stack_usage = 0
  56:./tmk_core/common/action_layer.c ****     default_layer_state_set(state);
  80               		.loc 1 56 0
  81 0000 0C94 0000 		jmp default_layer_state_set
  82               	.LVL5:
  83               		.cfi_endproc
  84               	.LFE7:
  86               		.section	.text.default_layer_or,"ax",@progbits
  87               	.global	default_layer_or
  89               	default_layer_or:
  90               	.LFB8:
  57:./tmk_core/common/action_layer.c **** }
  58:./tmk_core/common/action_layer.c **** 
  59:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  60:./tmk_core/common/action_layer.c **** /** \brief Default Layer Or
  61:./tmk_core/common/action_layer.c ****  *
  62:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  63:./tmk_core/common/action_layer.c ****  */
  64:./tmk_core/common/action_layer.c **** void default_layer_or(uint32_t state)
  65:./tmk_core/common/action_layer.c **** {
  91               		.loc 1 65 0
  92               		.cfi_startproc
  93               	.LVL6:
  94 0000 0F93      		push r16
  95               	.LCFI0:
  96               		.cfi_def_cfa_offset 3
  97               		.cfi_offset 16, -2
  98 0002 1F93      		push r17
  99               	.LCFI1:
 100               		.cfi_def_cfa_offset 4
 101               		.cfi_offset 17, -3
 102               	/* prologue: function */
 103               	/* frame size = 0 */
 104               	/* stack size = 2 */
 105               	.L__stack_usage = 2
  66:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state | state);
 106               		.loc 1 66 0
 107 0004 0091 0000 		lds r16,default_layer_state
 108 0008 1091 0000 		lds r17,default_layer_state+1
 109 000c 2091 0000 		lds r18,default_layer_state+2
 110 0010 3091 0000 		lds r19,default_layer_state+3
 111 0014 602B      		or r22,r16
 112 0016 712B      		or r23,r17
 113 0018 822B      		or r24,r18
 114 001a 932B      		or r25,r19
 115               	.LVL7:
 116               	/* epilogue start */
  67:./tmk_core/common/action_layer.c **** }
 117               		.loc 1 67 0
 118 001c 1F91      		pop r17
 119 001e 0F91      		pop r16
  66:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state | state);
 120               		.loc 1 66 0
 121 0020 0C94 0000 		jmp default_layer_state_set
 122               	.LVL8:
 123               		.cfi_endproc
 124               	.LFE8:
 126               		.section	.text.default_layer_and,"ax",@progbits
 127               	.global	default_layer_and
 129               	default_layer_and:
 130               	.LFB9:
  68:./tmk_core/common/action_layer.c **** /** \brief Default Layer And
  69:./tmk_core/common/action_layer.c ****  *
  70:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  71:./tmk_core/common/action_layer.c ****  */
  72:./tmk_core/common/action_layer.c **** void default_layer_and(uint32_t state)
  73:./tmk_core/common/action_layer.c **** {
 131               		.loc 1 73 0
 132               		.cfi_startproc
 133               	.LVL9:
 134 0000 0F93      		push r16
 135               	.LCFI2:
 136               		.cfi_def_cfa_offset 3
 137               		.cfi_offset 16, -2
 138 0002 1F93      		push r17
 139               	.LCFI3:
 140               		.cfi_def_cfa_offset 4
 141               		.cfi_offset 17, -3
 142               	/* prologue: function */
 143               	/* frame size = 0 */
 144               	/* stack size = 2 */
 145               	.L__stack_usage = 2
  74:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state & state);
 146               		.loc 1 74 0
 147 0004 0091 0000 		lds r16,default_layer_state
 148 0008 1091 0000 		lds r17,default_layer_state+1
 149 000c 2091 0000 		lds r18,default_layer_state+2
 150 0010 3091 0000 		lds r19,default_layer_state+3
 151 0014 6023      		and r22,r16
 152 0016 7123      		and r23,r17
 153 0018 8223      		and r24,r18
 154 001a 9323      		and r25,r19
 155               	.LVL10:
 156               	/* epilogue start */
  75:./tmk_core/common/action_layer.c **** }
 157               		.loc 1 75 0
 158 001c 1F91      		pop r17
 159 001e 0F91      		pop r16
  74:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state & state);
 160               		.loc 1 74 0
 161 0020 0C94 0000 		jmp default_layer_state_set
 162               	.LVL11:
 163               		.cfi_endproc
 164               	.LFE9:
 166               		.section	.text.default_layer_xor,"ax",@progbits
 167               	.global	default_layer_xor
 169               	default_layer_xor:
 170               	.LFB10:
  76:./tmk_core/common/action_layer.c **** /** \brief Default Layer Xor
  77:./tmk_core/common/action_layer.c ****  *
  78:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  79:./tmk_core/common/action_layer.c ****  */
  80:./tmk_core/common/action_layer.c **** void default_layer_xor(uint32_t state)
  81:./tmk_core/common/action_layer.c **** {
 171               		.loc 1 81 0
 172               		.cfi_startproc
 173               	.LVL12:
 174 0000 0F93      		push r16
 175               	.LCFI4:
 176               		.cfi_def_cfa_offset 3
 177               		.cfi_offset 16, -2
 178 0002 1F93      		push r17
 179               	.LCFI5:
 180               		.cfi_def_cfa_offset 4
 181               		.cfi_offset 17, -3
 182               	/* prologue: function */
 183               	/* frame size = 0 */
 184               	/* stack size = 2 */
 185               	.L__stack_usage = 2
  82:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state ^ state);
 186               		.loc 1 82 0
 187 0004 0091 0000 		lds r16,default_layer_state
 188 0008 1091 0000 		lds r17,default_layer_state+1
 189 000c 2091 0000 		lds r18,default_layer_state+2
 190 0010 3091 0000 		lds r19,default_layer_state+3
 191 0014 6027      		eor r22,r16
 192 0016 7127      		eor r23,r17
 193 0018 8227      		eor r24,r18
 194 001a 9327      		eor r25,r19
 195               	.LVL13:
 196               	/* epilogue start */
  83:./tmk_core/common/action_layer.c **** }
 197               		.loc 1 83 0
 198 001c 1F91      		pop r17
 199 001e 0F91      		pop r16
  82:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state ^ state);
 200               		.loc 1 82 0
 201 0020 0C94 0000 		jmp default_layer_state_set
 202               	.LVL14:
 203               		.cfi_endproc
 204               	.LFE10:
 206               		.section	.text.layer_state_set_user,"ax",@progbits
 207               		.weak	layer_state_set_user
 209               	layer_state_set_user:
 210               	.LFB11:
  84:./tmk_core/common/action_layer.c **** #endif
  85:./tmk_core/common/action_layer.c **** 
  86:./tmk_core/common/action_layer.c **** 
  87:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  88:./tmk_core/common/action_layer.c **** /** \brief Keymap Layer State
  89:./tmk_core/common/action_layer.c ****  */
  90:./tmk_core/common/action_layer.c **** uint32_t layer_state = 0;
  91:./tmk_core/common/action_layer.c **** 
  92:./tmk_core/common/action_layer.c **** /** \brief Layer state set user
  93:./tmk_core/common/action_layer.c ****  *
  94:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  95:./tmk_core/common/action_layer.c ****  */
  96:./tmk_core/common/action_layer.c **** __attribute__((weak))
  97:./tmk_core/common/action_layer.c **** uint32_t layer_state_set_user(uint32_t state) {
 211               		.loc 1 97 0
 212               		.cfi_startproc
 213               	.LVL15:
 214               	/* prologue: function */
 215               	/* frame size = 0 */
 216               	/* stack size = 0 */
 217               	.L__stack_usage = 0
  98:./tmk_core/common/action_layer.c ****     return state;
  99:./tmk_core/common/action_layer.c **** }
 218               		.loc 1 99 0
 219 0000 0895      		ret
 220               		.cfi_endproc
 221               	.LFE11:
 223               		.section	.text.layer_state_set_kb,"ax",@progbits
 224               		.weak	layer_state_set_kb
 226               	layer_state_set_kb:
 227               	.LFB12:
 100:./tmk_core/common/action_layer.c **** 
 101:./tmk_core/common/action_layer.c **** /** \brief Layer state set keyboard
 102:./tmk_core/common/action_layer.c ****  *
 103:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 104:./tmk_core/common/action_layer.c ****  */
 105:./tmk_core/common/action_layer.c **** __attribute__((weak))
 106:./tmk_core/common/action_layer.c **** uint32_t layer_state_set_kb(uint32_t state) {
 228               		.loc 1 106 0
 229               		.cfi_startproc
 230               	.LVL16:
 231               	/* prologue: function */
 232               	/* frame size = 0 */
 233               	/* stack size = 0 */
 234               	.L__stack_usage = 0
 107:./tmk_core/common/action_layer.c ****     return layer_state_set_user(state);
 235               		.loc 1 107 0
 236 0000 0C94 0000 		jmp layer_state_set_user
 237               	.LVL17:
 238               		.cfi_endproc
 239               	.LFE12:
 241               		.section	.text.layer_state_set,"ax",@progbits
 242               	.global	layer_state_set
 244               	layer_state_set:
 245               	.LFB13:
 108:./tmk_core/common/action_layer.c **** }
 109:./tmk_core/common/action_layer.c **** 
 110:./tmk_core/common/action_layer.c **** /** \brief Layer state set
 111:./tmk_core/common/action_layer.c ****  *
 112:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 113:./tmk_core/common/action_layer.c ****  */
 114:./tmk_core/common/action_layer.c **** void layer_state_set(uint32_t state)
 115:./tmk_core/common/action_layer.c **** {
 246               		.loc 1 115 0
 247               		.cfi_startproc
 248               	.LVL18:
 249               	/* prologue: function */
 250               	/* frame size = 0 */
 251               	/* stack size = 0 */
 252               	.L__stack_usage = 0
 116:./tmk_core/common/action_layer.c ****     state = layer_state_set_kb(state);
 253               		.loc 1 116 0
 254 0000 0E94 0000 		call layer_state_set_kb
 255               	.LVL19:
 117:./tmk_core/common/action_layer.c ****     dprint("layer_state: ");
 118:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 119:./tmk_core/common/action_layer.c ****     layer_state = state;
 256               		.loc 1 119 0
 257 0004 6093 0000 		sts layer_state,r22
 258 0008 7093 0000 		sts layer_state+1,r23
 259 000c 8093 0000 		sts layer_state+2,r24
 260 0010 9093 0000 		sts layer_state+3,r25
 120:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 121:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 261               		.loc 1 121 0
 262 0014 0C94 0000 		jmp clear_keyboard_but_mods
 263               	.LVL20:
 264               		.cfi_endproc
 265               	.LFE13:
 267               		.section	.text.layer_clear,"ax",@progbits
 268               	.global	layer_clear
 270               	layer_clear:
 271               	.LFB14:
 122:./tmk_core/common/action_layer.c **** }
 123:./tmk_core/common/action_layer.c **** 
 124:./tmk_core/common/action_layer.c **** /** \brief Layer clear
 125:./tmk_core/common/action_layer.c ****  *
 126:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 127:./tmk_core/common/action_layer.c ****  */
 128:./tmk_core/common/action_layer.c **** void layer_clear(void)
 129:./tmk_core/common/action_layer.c **** {
 272               		.loc 1 129 0
 273               		.cfi_startproc
 274               	/* prologue: function */
 275               	/* frame size = 0 */
 276               	/* stack size = 0 */
 277               	.L__stack_usage = 0
 130:./tmk_core/common/action_layer.c ****     layer_state_set(0);
 278               		.loc 1 130 0
 279 0000 60E0      		ldi r22,0
 280 0002 70E0      		ldi r23,0
 281 0004 CB01      		movw r24,r22
 282 0006 0C94 0000 		jmp layer_state_set
 283               	.LVL21:
 284               		.cfi_endproc
 285               	.LFE14:
 287               		.section	.text.layer_state_cmp,"ax",@progbits
 288               	.global	layer_state_cmp
 290               	layer_state_cmp:
 291               	.LFB16:
 131:./tmk_core/common/action_layer.c **** }
 132:./tmk_core/common/action_layer.c **** 
 133:./tmk_core/common/action_layer.c **** /** \brief Layer state is
 134:./tmk_core/common/action_layer.c ****  *
 135:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 136:./tmk_core/common/action_layer.c ****  */
 137:./tmk_core/common/action_layer.c **** bool layer_state_is(uint8_t layer)
 138:./tmk_core/common/action_layer.c **** {
 139:./tmk_core/common/action_layer.c ****     return layer_state_cmp(layer_state, layer);
 140:./tmk_core/common/action_layer.c **** }
 141:./tmk_core/common/action_layer.c **** 
 142:./tmk_core/common/action_layer.c **** /** \brief Layer state compare
 143:./tmk_core/common/action_layer.c ****  *
 144:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 145:./tmk_core/common/action_layer.c ****  */
 146:./tmk_core/common/action_layer.c **** bool layer_state_cmp(uint32_t cmp_layer_state, uint8_t layer) {
 292               		.loc 1 146 0
 293               		.cfi_startproc
 294               	.LVL22:
 295               	/* prologue: function */
 296               	/* frame size = 0 */
 297               	/* stack size = 0 */
 298               	.L__stack_usage = 0
 147:./tmk_core/common/action_layer.c ****     if (!cmp_layer_state) { return layer == 0; }
 299               		.loc 1 147 0
 300 0000 6115      		cp r22,__zero_reg__
 301 0002 7105      		cpc r23,__zero_reg__
 302 0004 8105      		cpc r24,__zero_reg__
 303 0006 9105      		cpc r25,__zero_reg__
 304 0008 01F4      		brne .L13
 305               		.loc 1 147 0 is_stmt 0 discriminator 1
 306 000a 81E0      		ldi r24,lo8(1)
 307 000c 4423      		tst r20
 308 000e 01F0      		breq .L15
 309 0010 80E0      		ldi r24,0
 310 0012 0895      		ret
 311               	.L13:
 148:./tmk_core/common/action_layer.c ****     return (cmp_layer_state & (1UL<<layer)) != 0;
 312               		.loc 1 148 0 is_stmt 1
 313 0014 DC01      		movw r26,r24
 314 0016 CB01      		movw r24,r22
 315 0018 00C0      		rjmp 2f
 316               		1:
 317 001a B695      		lsr r27
 318 001c A795      		ror r26
 319 001e 9795      		ror r25
 320 0020 8795      		ror r24
 321               		2:
 322 0022 4A95      		dec r20
 323 0024 02F4      		brpl 1b
 324 0026 8170      		andi r24,lo8(1)
 325               	.L15:
 149:./tmk_core/common/action_layer.c **** }
 326               		.loc 1 149 0
 327 0028 0895      		ret
 328               		.cfi_endproc
 329               	.LFE16:
 331               		.section	.text.layer_state_is,"ax",@progbits
 332               	.global	layer_state_is
 334               	layer_state_is:
 335               	.LFB15:
 138:./tmk_core/common/action_layer.c ****     return layer_state_cmp(layer_state, layer);
 336               		.loc 1 138 0
 337               		.cfi_startproc
 338               	.LVL23:
 339               	/* prologue: function */
 340               	/* frame size = 0 */
 341               	/* stack size = 0 */
 342               	.L__stack_usage = 0
 343 0000 482F      		mov r20,r24
 139:./tmk_core/common/action_layer.c **** }
 344               		.loc 1 139 0
 345 0002 6091 0000 		lds r22,layer_state
 346 0006 7091 0000 		lds r23,layer_state+1
 347 000a 8091 0000 		lds r24,layer_state+2
 348 000e 9091 0000 		lds r25,layer_state+3
 349 0012 0C94 0000 		jmp layer_state_cmp
 350               	.LVL24:
 351               		.cfi_endproc
 352               	.LFE15:
 354               		.section	.text.layer_move,"ax",@progbits
 355               	.global	layer_move
 357               	layer_move:
 358               	.LFB17:
 150:./tmk_core/common/action_layer.c **** 
 151:./tmk_core/common/action_layer.c **** /** \brief Layer move
 152:./tmk_core/common/action_layer.c ****  *
 153:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 154:./tmk_core/common/action_layer.c ****  */
 155:./tmk_core/common/action_layer.c **** void layer_move(uint8_t layer)
 156:./tmk_core/common/action_layer.c **** {
 359               		.loc 1 156 0
 360               		.cfi_startproc
 361               	.LVL25:
 362 0000 0F93      		push r16
 363               	.LCFI6:
 364               		.cfi_def_cfa_offset 3
 365               		.cfi_offset 16, -2
 366 0002 1F93      		push r17
 367               	.LCFI7:
 368               		.cfi_def_cfa_offset 4
 369               		.cfi_offset 17, -3
 370               	/* prologue: function */
 371               	/* frame size = 0 */
 372               	/* stack size = 2 */
 373               	.L__stack_usage = 2
 157:./tmk_core/common/action_layer.c ****     layer_state_set(1UL<<layer);
 374               		.loc 1 157 0
 375 0004 41E0      		ldi r20,lo8(1)
 376 0006 50E0      		ldi r21,0
 377 0008 60E0      		ldi r22,0
 378 000a 70E0      		ldi r23,0
 379 000c 8A01      		movw r16,r20
 380 000e 9B01      		movw r18,r22
 381 0010 00C0      		rjmp 2f
 382               		1:
 383 0012 000F      		lsl r16
 384 0014 111F      		rol r17
 385 0016 221F      		rol r18
 386 0018 331F      		rol r19
 387               		2:
 388 001a 8A95      		dec r24
 389 001c 02F4      		brpl 1b
 390 001e C901      		movw r24,r18
 391 0020 B801      		movw r22,r16
 392               	/* epilogue start */
 158:./tmk_core/common/action_layer.c **** }
 393               		.loc 1 158 0
 394 0022 1F91      		pop r17
 395 0024 0F91      		pop r16
 157:./tmk_core/common/action_layer.c ****     layer_state_set(1UL<<layer);
 396               		.loc 1 157 0
 397 0026 0C94 0000 		jmp layer_state_set
 398               	.LVL26:
 399               		.cfi_endproc
 400               	.LFE17:
 402               		.section	.text.layer_on,"ax",@progbits
 403               	.global	layer_on
 405               	layer_on:
 406               	.LFB18:
 159:./tmk_core/common/action_layer.c **** 
 160:./tmk_core/common/action_layer.c **** /** \brief Layer on
 161:./tmk_core/common/action_layer.c ****  *
 162:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 163:./tmk_core/common/action_layer.c ****  */
 164:./tmk_core/common/action_layer.c **** void layer_on(uint8_t layer)
 165:./tmk_core/common/action_layer.c **** {
 407               		.loc 1 165 0
 408               		.cfi_startproc
 409               	.LVL27:
 410 0000 0F93      		push r16
 411               	.LCFI8:
 412               		.cfi_def_cfa_offset 3
 413               		.cfi_offset 16, -2
 414 0002 1F93      		push r17
 415               	.LCFI9:
 416               		.cfi_def_cfa_offset 4
 417               		.cfi_offset 17, -3
 418               	/* prologue: function */
 419               	/* frame size = 0 */
 420               	/* stack size = 2 */
 421               	.L__stack_usage = 2
 166:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | (1UL<<layer));
 422               		.loc 1 166 0
 423 0004 41E0      		ldi r20,lo8(1)
 424 0006 50E0      		ldi r21,0
 425 0008 60E0      		ldi r22,0
 426 000a 70E0      		ldi r23,0
 427 000c 00C0      		rjmp 2f
 428               		1:
 429 000e 440F      		lsl r20
 430 0010 551F      		rol r21
 431 0012 661F      		rol r22
 432 0014 771F      		rol r23
 433               		2:
 434 0016 8A95      		dec r24
 435 0018 02F4      		brpl 1b
 436 001a 8091 0000 		lds r24,layer_state
 437 001e 9091 0000 		lds r25,layer_state+1
 438 0022 A091 0000 		lds r26,layer_state+2
 439 0026 B091 0000 		lds r27,layer_state+3
 440               	.LVL28:
 441 002a 8A01      		movw r16,r20
 442 002c 9B01      		movw r18,r22
 443 002e 082B      		or r16,r24
 444 0030 192B      		or r17,r25
 445 0032 2A2B      		or r18,r26
 446 0034 3B2B      		or r19,r27
 447 0036 C901      		movw r24,r18
 448 0038 B801      		movw r22,r16
 449               	/* epilogue start */
 167:./tmk_core/common/action_layer.c **** }
 450               		.loc 1 167 0
 451 003a 1F91      		pop r17
 452 003c 0F91      		pop r16
 166:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | (1UL<<layer));
 453               		.loc 1 166 0
 454 003e 0C94 0000 		jmp layer_state_set
 455               	.LVL29:
 456               		.cfi_endproc
 457               	.LFE18:
 459               		.section	.text.layer_off,"ax",@progbits
 460               	.global	layer_off
 462               	layer_off:
 463               	.LFB19:
 168:./tmk_core/common/action_layer.c **** 
 169:./tmk_core/common/action_layer.c **** /** \brief Layer off
 170:./tmk_core/common/action_layer.c ****  *
 171:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 172:./tmk_core/common/action_layer.c ****  */
 173:./tmk_core/common/action_layer.c **** void layer_off(uint8_t layer)
 174:./tmk_core/common/action_layer.c **** {
 464               		.loc 1 174 0
 465               		.cfi_startproc
 466               	.LVL30:
 467 0000 0F93      		push r16
 468               	.LCFI10:
 469               		.cfi_def_cfa_offset 3
 470               		.cfi_offset 16, -2
 471 0002 1F93      		push r17
 472               	.LCFI11:
 473               		.cfi_def_cfa_offset 4
 474               		.cfi_offset 17, -3
 475               	/* prologue: function */
 476               	/* frame size = 0 */
 477               	/* stack size = 2 */
 478               	.L__stack_usage = 2
 175:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & ~(1UL<<layer));
 479               		.loc 1 175 0
 480 0004 41E0      		ldi r20,lo8(1)
 481 0006 50E0      		ldi r21,0
 482 0008 60E0      		ldi r22,0
 483 000a 70E0      		ldi r23,0
 484 000c 00C0      		rjmp 2f
 485               		1:
 486 000e 440F      		lsl r20
 487 0010 551F      		rol r21
 488 0012 661F      		rol r22
 489 0014 771F      		rol r23
 490               		2:
 491 0016 8A95      		dec r24
 492 0018 02F4      		brpl 1b
 493 001a 4095      		com r20
 494 001c 5095      		com r21
 495 001e 6095      		com r22
 496 0020 7095      		com r23
 497 0022 8091 0000 		lds r24,layer_state
 498 0026 9091 0000 		lds r25,layer_state+1
 499 002a A091 0000 		lds r26,layer_state+2
 500 002e B091 0000 		lds r27,layer_state+3
 501               	.LVL31:
 502 0032 8A01      		movw r16,r20
 503 0034 9B01      		movw r18,r22
 504 0036 0823      		and r16,r24
 505 0038 1923      		and r17,r25
 506 003a 2A23      		and r18,r26
 507 003c 3B23      		and r19,r27
 508 003e C901      		movw r24,r18
 509 0040 B801      		movw r22,r16
 510               	/* epilogue start */
 176:./tmk_core/common/action_layer.c **** }
 511               		.loc 1 176 0
 512 0042 1F91      		pop r17
 513 0044 0F91      		pop r16
 175:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & ~(1UL<<layer));
 514               		.loc 1 175 0
 515 0046 0C94 0000 		jmp layer_state_set
 516               	.LVL32:
 517               		.cfi_endproc
 518               	.LFE19:
 520               		.section	.text.layer_invert,"ax",@progbits
 521               	.global	layer_invert
 523               	layer_invert:
 524               	.LFB20:
 177:./tmk_core/common/action_layer.c **** 
 178:./tmk_core/common/action_layer.c **** /** \brief Layer invert
 179:./tmk_core/common/action_layer.c ****  *
 180:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 181:./tmk_core/common/action_layer.c ****  */
 182:./tmk_core/common/action_layer.c **** void layer_invert(uint8_t layer)
 183:./tmk_core/common/action_layer.c **** {
 525               		.loc 1 183 0
 526               		.cfi_startproc
 527               	.LVL33:
 528 0000 0F93      		push r16
 529               	.LCFI12:
 530               		.cfi_def_cfa_offset 3
 531               		.cfi_offset 16, -2
 532 0002 1F93      		push r17
 533               	.LCFI13:
 534               		.cfi_def_cfa_offset 4
 535               		.cfi_offset 17, -3
 536               	/* prologue: function */
 537               	/* frame size = 0 */
 538               	/* stack size = 2 */
 539               	.L__stack_usage = 2
 184:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ (1UL<<layer));
 540               		.loc 1 184 0
 541 0004 41E0      		ldi r20,lo8(1)
 542 0006 50E0      		ldi r21,0
 543 0008 60E0      		ldi r22,0
 544 000a 70E0      		ldi r23,0
 545 000c 00C0      		rjmp 2f
 546               		1:
 547 000e 440F      		lsl r20
 548 0010 551F      		rol r21
 549 0012 661F      		rol r22
 550 0014 771F      		rol r23
 551               		2:
 552 0016 8A95      		dec r24
 553 0018 02F4      		brpl 1b
 554 001a 8091 0000 		lds r24,layer_state
 555 001e 9091 0000 		lds r25,layer_state+1
 556 0022 A091 0000 		lds r26,layer_state+2
 557 0026 B091 0000 		lds r27,layer_state+3
 558               	.LVL34:
 559 002a 8A01      		movw r16,r20
 560 002c 9B01      		movw r18,r22
 561 002e 0827      		eor r16,r24
 562 0030 1927      		eor r17,r25
 563 0032 2A27      		eor r18,r26
 564 0034 3B27      		eor r19,r27
 565 0036 C901      		movw r24,r18
 566 0038 B801      		movw r22,r16
 567               	/* epilogue start */
 185:./tmk_core/common/action_layer.c **** }
 568               		.loc 1 185 0
 569 003a 1F91      		pop r17
 570 003c 0F91      		pop r16
 184:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ (1UL<<layer));
 571               		.loc 1 184 0
 572 003e 0C94 0000 		jmp layer_state_set
 573               	.LVL35:
 574               		.cfi_endproc
 575               	.LFE20:
 577               		.section	.text.layer_or,"ax",@progbits
 578               	.global	layer_or
 580               	layer_or:
 581               	.LFB21:
 186:./tmk_core/common/action_layer.c **** 
 187:./tmk_core/common/action_layer.c **** /** \brief Layer or
 188:./tmk_core/common/action_layer.c ****  *
 189:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 190:./tmk_core/common/action_layer.c ****  */
 191:./tmk_core/common/action_layer.c **** void layer_or(uint32_t state)
 192:./tmk_core/common/action_layer.c **** {
 582               		.loc 1 192 0
 583               		.cfi_startproc
 584               	.LVL36:
 585 0000 0F93      		push r16
 586               	.LCFI14:
 587               		.cfi_def_cfa_offset 3
 588               		.cfi_offset 16, -2
 589 0002 1F93      		push r17
 590               	.LCFI15:
 591               		.cfi_def_cfa_offset 4
 592               		.cfi_offset 17, -3
 593               	/* prologue: function */
 594               	/* frame size = 0 */
 595               	/* stack size = 2 */
 596               	.L__stack_usage = 2
 193:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | state);
 597               		.loc 1 193 0
 598 0004 0091 0000 		lds r16,layer_state
 599 0008 1091 0000 		lds r17,layer_state+1
 600 000c 2091 0000 		lds r18,layer_state+2
 601 0010 3091 0000 		lds r19,layer_state+3
 602 0014 602B      		or r22,r16
 603 0016 712B      		or r23,r17
 604 0018 822B      		or r24,r18
 605 001a 932B      		or r25,r19
 606               	.LVL37:
 607               	/* epilogue start */
 194:./tmk_core/common/action_layer.c **** }
 608               		.loc 1 194 0
 609 001c 1F91      		pop r17
 610 001e 0F91      		pop r16
 193:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | state);
 611               		.loc 1 193 0
 612 0020 0C94 0000 		jmp layer_state_set
 613               	.LVL38:
 614               		.cfi_endproc
 615               	.LFE21:
 617               		.section	.text.layer_and,"ax",@progbits
 618               	.global	layer_and
 620               	layer_and:
 621               	.LFB22:
 195:./tmk_core/common/action_layer.c **** /** \brief Layer and
 196:./tmk_core/common/action_layer.c ****  *
 197:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 198:./tmk_core/common/action_layer.c ****  */
 199:./tmk_core/common/action_layer.c **** void layer_and(uint32_t state)
 200:./tmk_core/common/action_layer.c **** {
 622               		.loc 1 200 0
 623               		.cfi_startproc
 624               	.LVL39:
 625 0000 0F93      		push r16
 626               	.LCFI16:
 627               		.cfi_def_cfa_offset 3
 628               		.cfi_offset 16, -2
 629 0002 1F93      		push r17
 630               	.LCFI17:
 631               		.cfi_def_cfa_offset 4
 632               		.cfi_offset 17, -3
 633               	/* prologue: function */
 634               	/* frame size = 0 */
 635               	/* stack size = 2 */
 636               	.L__stack_usage = 2
 201:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & state);
 637               		.loc 1 201 0
 638 0004 0091 0000 		lds r16,layer_state
 639 0008 1091 0000 		lds r17,layer_state+1
 640 000c 2091 0000 		lds r18,layer_state+2
 641 0010 3091 0000 		lds r19,layer_state+3
 642 0014 6023      		and r22,r16
 643 0016 7123      		and r23,r17
 644 0018 8223      		and r24,r18
 645 001a 9323      		and r25,r19
 646               	.LVL40:
 647               	/* epilogue start */
 202:./tmk_core/common/action_layer.c **** }
 648               		.loc 1 202 0
 649 001c 1F91      		pop r17
 650 001e 0F91      		pop r16
 201:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & state);
 651               		.loc 1 201 0
 652 0020 0C94 0000 		jmp layer_state_set
 653               	.LVL41:
 654               		.cfi_endproc
 655               	.LFE22:
 657               		.section	.text.layer_xor,"ax",@progbits
 658               	.global	layer_xor
 660               	layer_xor:
 661               	.LFB23:
 203:./tmk_core/common/action_layer.c **** /** \brief Layer xor
 204:./tmk_core/common/action_layer.c ****  *
 205:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 206:./tmk_core/common/action_layer.c ****  */
 207:./tmk_core/common/action_layer.c **** void layer_xor(uint32_t state)
 208:./tmk_core/common/action_layer.c **** {
 662               		.loc 1 208 0
 663               		.cfi_startproc
 664               	.LVL42:
 665 0000 0F93      		push r16
 666               	.LCFI18:
 667               		.cfi_def_cfa_offset 3
 668               		.cfi_offset 16, -2
 669 0002 1F93      		push r17
 670               	.LCFI19:
 671               		.cfi_def_cfa_offset 4
 672               		.cfi_offset 17, -3
 673               	/* prologue: function */
 674               	/* frame size = 0 */
 675               	/* stack size = 2 */
 676               	.L__stack_usage = 2
 209:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ state);
 677               		.loc 1 209 0
 678 0004 0091 0000 		lds r16,layer_state
 679 0008 1091 0000 		lds r17,layer_state+1
 680 000c 2091 0000 		lds r18,layer_state+2
 681 0010 3091 0000 		lds r19,layer_state+3
 682 0014 6027      		eor r22,r16
 683 0016 7127      		eor r23,r17
 684 0018 8227      		eor r24,r18
 685 001a 9327      		eor r25,r19
 686               	.LVL43:
 687               	/* epilogue start */
 210:./tmk_core/common/action_layer.c **** }
 688               		.loc 1 210 0
 689 001c 1F91      		pop r17
 690 001e 0F91      		pop r16
 209:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ state);
 691               		.loc 1 209 0
 692 0020 0C94 0000 		jmp layer_state_set
 693               	.LVL44:
 694               		.cfi_endproc
 695               	.LFE23:
 697               		.section	.text.layer_debug,"ax",@progbits
 698               	.global	layer_debug
 700               	layer_debug:
 701               	.LFB24:
 211:./tmk_core/common/action_layer.c **** 
 212:./tmk_core/common/action_layer.c **** /** \brief Layer debug printing
 213:./tmk_core/common/action_layer.c ****  *
 214:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 215:./tmk_core/common/action_layer.c ****  */
 216:./tmk_core/common/action_layer.c **** void layer_debug(void)
 217:./tmk_core/common/action_layer.c **** {
 702               		.loc 1 217 0
 703               		.cfi_startproc
 704               	/* prologue: function */
 705               	/* frame size = 0 */
 706               	/* stack size = 0 */
 707               	.L__stack_usage = 0
 708 0000 0895      		ret
 709               		.cfi_endproc
 710               	.LFE24:
 712               		.section	.text.update_source_layers_cache,"ax",@progbits
 713               	.global	update_source_layers_cache
 715               	update_source_layers_cache:
 716               	.LFB25:
 218:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", layer_state, biton32(layer_state));
 219:./tmk_core/common/action_layer.c **** }
 220:./tmk_core/common/action_layer.c **** #endif
 221:./tmk_core/common/action_layer.c **** 
 222:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 223:./tmk_core/common/action_layer.c **** uint8_t source_layers_cache[(MATRIX_ROWS * MATRIX_COLS + 7) / 8][MAX_LAYER_BITS] = {{0}};
 224:./tmk_core/common/action_layer.c **** 
 225:./tmk_core/common/action_layer.c **** void update_source_layers_cache(keypos_t key, uint8_t layer)
 226:./tmk_core/common/action_layer.c **** {
 717               		.loc 1 226 0
 718               		.cfi_startproc
 719               	.LVL45:
 720               	/* prologue: function */
 721               	/* frame size = 0 */
 722               	/* stack size = 0 */
 723               	.L__stack_usage = 0
 227:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 724               		.loc 1 227 0
 725 0000 2FE0      		ldi r18,lo8(15)
 726 0002 929F      		mul r25,r18
 727 0004 800D      		add r24,r0
 728 0006 1124      		clr __zero_reg__
 729               	.LVL46:
 228:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 730               		.loc 1 228 0
 731 0008 A82F      		mov r26,r24
 732 000a A695      		lsr r26
 733 000c A695      		lsr r26
 734 000e A695      		lsr r26
 735               	.LVL47:
 229:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 736               		.loc 1 229 0
 737 0010 8770      		andi r24,lo8(7)
 738               	.LVL48:
 739               	.LBB2:
 230:./tmk_core/common/action_layer.c **** 
 231:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 232:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 740               		.loc 1 232 0
 741 0012 51E0      		ldi r21,lo8(1)
 742 0014 00C0      		rjmp 2f
 743               		1:
 744 0016 550F      		lsl r21
 745               		2:
 746 0018 8A95      		dec r24
 747 001a 02F4      		brpl 1b
 748 001c 85E0      		ldi r24,lo8(5)
 749               	.LVL49:
 750 001e A89F      		mul r26,r24
 751 0020 D001      		movw r26,r0
 752 0022 1124      		clr __zero_reg__
 753               	.LVL50:
 754 0024 20E0      		ldi r18,0
 755 0026 30E0      		ldi r19,0
 233:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 756               		.loc 1 233 0
 757 0028 70E0      		ldi r23,0
 758               	.LVL51:
 759               	.L30:
 760 002a F901      		movw r30,r18
 761 002c EA0F      		add r30,r26
 762 002e FB1F      		adc r31,r27
 763 0030 E050      		subi r30,lo8(-(source_layers_cache))
 764 0032 F040      		sbci r31,hi8(-(source_layers_cache))
 234:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 765               		.loc 1 234 0 discriminator 3
 766 0034 4081      		ld r20,Z
 233:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 767               		.loc 1 233 0 discriminator 3
 768 0036 CB01      		movw r24,r22
 769 0038 022E      		mov r0,r18
 770 003a 00C0      		rjmp 2f
 771               		1:
 772 003c 9695      		lsr r25
 773 003e 8795      		ror r24
 774               		2:
 775 0040 0A94      		dec r0
 776 0042 02F4      		brpl 1b
 777 0044 8170      		andi r24,1
 778 0046 9927      		clr r25
 232:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 779               		.loc 1 232 0 discriminator 3
 780 0048 8195      		neg r24
 781 004a 8427      		eor r24,r20
 782 004c 8523      		and r24,r21
 783 004e 8427      		eor r24,r20
 784 0050 8083      		st Z,r24
 785               	.LVL52:
 786 0052 2F5F      		subi r18,-1
 787 0054 3F4F      		sbci r19,-1
 788               	.LVL53:
 231:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 789               		.loc 1 231 0 discriminator 3
 790 0056 2530      		cpi r18,5
 791 0058 3105      		cpc r19,__zero_reg__
 792 005a 01F4      		brne .L30
 793               	/* epilogue start */
 794               	.LBE2:
 235:./tmk_core/common/action_layer.c ****             & (1U << storage_bit);
 236:./tmk_core/common/action_layer.c ****     }
 237:./tmk_core/common/action_layer.c **** }
 795               		.loc 1 237 0
 796 005c 0895      		ret
 797               		.cfi_endproc
 798               	.LFE25:
 800               		.section	.text.read_source_layers_cache,"ax",@progbits
 801               	.global	read_source_layers_cache
 803               	read_source_layers_cache:
 804               	.LFB26:
 238:./tmk_core/common/action_layer.c **** 
 239:./tmk_core/common/action_layer.c **** uint8_t read_source_layers_cache(keypos_t key)
 240:./tmk_core/common/action_layer.c **** {
 805               		.loc 1 240 0
 806               		.cfi_startproc
 807               	.LVL54:
 808               	/* prologue: function */
 809               	/* frame size = 0 */
 810               	/* stack size = 0 */
 811               	.L__stack_usage = 0
 241:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 812               		.loc 1 241 0
 813 0000 2FE0      		ldi r18,lo8(15)
 814 0002 929F      		mul r25,r18
 815 0004 800D      		add r24,r0
 816 0006 1124      		clr __zero_reg__
 817               	.LVL55:
 242:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 818               		.loc 1 242 0
 819 0008 682F      		mov r22,r24
 820 000a 6695      		lsr r22
 821 000c 6695      		lsr r22
 822 000e 6695      		lsr r22
 823               	.LVL56:
 243:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 824               		.loc 1 243 0
 825 0010 982F      		mov r25,r24
 826 0012 9770      		andi r25,lo8(7)
 827               	.LVL57:
 828 0014 85E0      		ldi r24,lo8(5)
 829               	.LVL58:
 830 0016 689F      		mul r22,r24
 831 0018 B001      		movw r22,r0
 832 001a 1124      		clr __zero_reg__
 833               	.LVL59:
 834 001c 40E0      		ldi r20,0
 835 001e 50E0      		ldi r21,0
 244:./tmk_core/common/action_layer.c ****     uint8_t layer = 0;
 836               		.loc 1 244 0
 837 0020 80E0      		ldi r24,0
 838               	.LVL60:
 839               	.L33:
 840 0022 FA01      		movw r30,r20
 841 0024 E60F      		add r30,r22
 842 0026 F71F      		adc r31,r23
 843 0028 E050      		subi r30,lo8(-(source_layers_cache))
 844 002a F040      		sbci r31,hi8(-(source_layers_cache))
 845               	.LBB3:
 245:./tmk_core/common/action_layer.c **** 
 246:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 247:./tmk_core/common/action_layer.c ****         layer |=
 248:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 249:./tmk_core/common/action_layer.c ****               & (1U << storage_bit)) != 0)
 846               		.loc 1 249 0 discriminator 3
 847 002c 2081      		ld r18,Z
 848 002e 30E0      		ldi r19,0
 849 0030 092E      		mov r0,r25
 850 0032 00C0      		rjmp 2f
 851               		1:
 852 0034 3695      		lsr r19
 853 0036 2795      		ror r18
 854               		2:
 855 0038 0A94      		dec r0
 856 003a 02F4      		brpl 1b
 857 003c 2170      		andi r18,1
 858 003e 3327      		clr r19
 250:./tmk_core/common/action_layer.c ****             << bit_number;
 859               		.loc 1 250 0 discriminator 3
 860 0040 042E      		mov r0,r20
 861 0042 00C0      		rjmp 2f
 862               		1:
 863 0044 220F      		lsl r18
 864               		2:
 865 0046 0A94      		dec r0
 866 0048 02F4      		brpl 1b
 247:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 867               		.loc 1 247 0 discriminator 3
 868 004a 822B      		or r24,r18
 869               	.LVL61:
 870 004c 4F5F      		subi r20,-1
 871 004e 5F4F      		sbci r21,-1
 872               	.LVL62:
 246:./tmk_core/common/action_layer.c ****         layer |=
 873               		.loc 1 246 0 discriminator 3
 874 0050 4530      		cpi r20,5
 875 0052 5105      		cpc r21,__zero_reg__
 876 0054 01F4      		brne .L33
 877               	/* epilogue start */
 878               	.LBE3:
 251:./tmk_core/common/action_layer.c ****     }
 252:./tmk_core/common/action_layer.c **** 
 253:./tmk_core/common/action_layer.c ****     return layer;
 254:./tmk_core/common/action_layer.c **** }
 879               		.loc 1 254 0
 880 0056 0895      		ret
 881               		.cfi_endproc
 882               	.LFE26:
 884               		.section	.text.layer_switch_get_layer,"ax",@progbits
 885               	.global	layer_switch_get_layer
 887               	layer_switch_get_layer:
 888               	.LFB28:
 255:./tmk_core/common/action_layer.c **** #endif
 256:./tmk_core/common/action_layer.c **** 
 257:./tmk_core/common/action_layer.c **** /** \brief Store or get action (FIXME: Needs better summary)
 258:./tmk_core/common/action_layer.c ****  *
 259:./tmk_core/common/action_layer.c ****  * Make sure the action triggered when the key is released is the same
 260:./tmk_core/common/action_layer.c ****  * one as the one triggered on press. It's important for the mod keys
 261:./tmk_core/common/action_layer.c ****  * when the layer is switched after the down event but before the up
 262:./tmk_core/common/action_layer.c ****  * event as they may get stuck otherwise.
 263:./tmk_core/common/action_layer.c ****  */
 264:./tmk_core/common/action_layer.c **** action_t store_or_get_action(bool pressed, keypos_t key)
 265:./tmk_core/common/action_layer.c **** {
 266:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 267:./tmk_core/common/action_layer.c ****     if (disable_action_cache) {
 268:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 269:./tmk_core/common/action_layer.c ****     }
 270:./tmk_core/common/action_layer.c **** 
 271:./tmk_core/common/action_layer.c ****     uint8_t layer;
 272:./tmk_core/common/action_layer.c **** 
 273:./tmk_core/common/action_layer.c ****     if (pressed) {
 274:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 275:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 276:./tmk_core/common/action_layer.c ****     }
 277:./tmk_core/common/action_layer.c ****     else {
 278:./tmk_core/common/action_layer.c ****         layer = read_source_layers_cache(key);
 279:./tmk_core/common/action_layer.c ****     }
 280:./tmk_core/common/action_layer.c ****     return action_for_key(layer, key);
 281:./tmk_core/common/action_layer.c **** #else
 282:./tmk_core/common/action_layer.c ****     return layer_switch_get_action(key);
 283:./tmk_core/common/action_layer.c **** #endif
 284:./tmk_core/common/action_layer.c **** }
 285:./tmk_core/common/action_layer.c **** 
 286:./tmk_core/common/action_layer.c **** 
 287:./tmk_core/common/action_layer.c **** /** \brief Layer switch get layer
 288:./tmk_core/common/action_layer.c ****  *
 289:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 290:./tmk_core/common/action_layer.c ****  */
 291:./tmk_core/common/action_layer.c **** int8_t layer_switch_get_layer(keypos_t key)
 292:./tmk_core/common/action_layer.c **** {
 889               		.loc 1 292 0
 890               		.cfi_startproc
 891               	.LVL63:
 892 0000 CF92      		push r12
 893               	.LCFI20:
 894               		.cfi_def_cfa_offset 3
 895               		.cfi_offset 12, -2
 896 0002 DF92      		push r13
 897               	.LCFI21:
 898               		.cfi_def_cfa_offset 4
 899               		.cfi_offset 13, -3
 900 0004 EF92      		push r14
 901               	.LCFI22:
 902               		.cfi_def_cfa_offset 5
 903               		.cfi_offset 14, -4
 904 0006 FF92      		push r15
 905               	.LCFI23:
 906               		.cfi_def_cfa_offset 6
 907               		.cfi_offset 15, -5
 908 0008 0F93      		push r16
 909               	.LCFI24:
 910               		.cfi_def_cfa_offset 7
 911               		.cfi_offset 16, -6
 912 000a 1F93      		push r17
 913               	.LCFI25:
 914               		.cfi_def_cfa_offset 8
 915               		.cfi_offset 17, -7
 916 000c CF93      		push r28
 917               	.LCFI26:
 918               		.cfi_def_cfa_offset 9
 919               		.cfi_offset 28, -8
 920 000e DF93      		push r29
 921               	.LCFI27:
 922               		.cfi_def_cfa_offset 10
 923               		.cfi_offset 29, -9
 924               	/* prologue: function */
 925               	/* frame size = 0 */
 926               	/* stack size = 8 */
 927               	.L__stack_usage = 8
 928 0010 8C01      		movw r16,r24
 929               	.LVL64:
 293:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
 294:./tmk_core/common/action_layer.c ****     action_t action;
 295:./tmk_core/common/action_layer.c ****     action.code = ACTION_TRANSPARENT;
 296:./tmk_core/common/action_layer.c **** 
 297:./tmk_core/common/action_layer.c ****     uint32_t layers = layer_state | default_layer_state;
 930               		.loc 1 297 0
 931 0012 C090 0000 		lds r12,default_layer_state
 932 0016 D090 0000 		lds r13,default_layer_state+1
 933 001a E090 0000 		lds r14,default_layer_state+2
 934 001e F090 0000 		lds r15,default_layer_state+3
 935 0022 8091 0000 		lds r24,layer_state
 936 0026 9091 0000 		lds r25,layer_state+1
 937 002a A091 0000 		lds r26,layer_state+2
 938 002e B091 0000 		lds r27,layer_state+3
 939               	.LVL65:
 940 0032 C82A      		or r12,r24
 941 0034 D92A      		or r13,r25
 942 0036 EA2A      		or r14,r26
 943 0038 FB2A      		or r15,r27
 944               	.LVL66:
 945 003a CFE1      		ldi r28,lo8(31)
 946 003c D0E0      		ldi r29,0
 947               	.LVL67:
 948               	.L38:
 949               	.LBB4:
 298:./tmk_core/common/action_layer.c ****     /* check top layer first */
 299:./tmk_core/common/action_layer.c ****     for (int8_t i = 31; i >= 0; i--) {
 300:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 950               		.loc 1 300 0
 951 003e D701      		movw r26,r14
 952 0040 C601      		movw r24,r12
 953 0042 0C2E      		mov r0,r28
 954 0044 00C0      		rjmp 2f
 955               		1:
 956 0046 B695      		lsr r27
 957 0048 A795      		ror r26
 958 004a 9795      		ror r25
 959 004c 8795      		ror r24
 960               		2:
 961 004e 0A94      		dec r0
 962 0050 02F4      		brpl 1b
 963 0052 80FF      		sbrs r24,0
 964 0054 00C0      		rjmp .L36
 301:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 965               		.loc 1 301 0
 966 0056 B801      		movw r22,r16
 967 0058 8C2F      		mov r24,r28
 968 005a 0E94 0000 		call action_for_key
 969               	.LVL68:
 302:./tmk_core/common/action_layer.c ****             if (action.code != ACTION_TRANSPARENT) {
 970               		.loc 1 302 0
 971 005e 0197      		sbiw r24,1
 972 0060 01F4      		brne .L39
 973               	.LVL69:
 974               	.L36:
 975               	.LVL70:
 976 0062 2197      		sbiw r28,1
 977 0064 00F4      		brcc .L38
 978               	.LBE4:
 303:./tmk_core/common/action_layer.c ****                 return i;
 304:./tmk_core/common/action_layer.c ****             }
 305:./tmk_core/common/action_layer.c ****         }
 306:./tmk_core/common/action_layer.c ****     }
 307:./tmk_core/common/action_layer.c ****     /* fall back to layer 0 */
 308:./tmk_core/common/action_layer.c ****     return 0;
 979               		.loc 1 308 0
 980 0066 80E0      		ldi r24,0
 981               	.LBB5:
 982 0068 00C0      		rjmp .L37
 983               	.LVL71:
 984               	.L39:
 303:./tmk_core/common/action_layer.c ****                 return i;
 985               		.loc 1 303 0
 986 006a 8C2F      		mov r24,r28
 987               	.LVL72:
 988               	.L37:
 989               	/* epilogue start */
 990               	.LBE5:
 309:./tmk_core/common/action_layer.c **** #else
 310:./tmk_core/common/action_layer.c ****     return biton32(default_layer_state);
 311:./tmk_core/common/action_layer.c **** #endif
 312:./tmk_core/common/action_layer.c **** }
 991               		.loc 1 312 0
 992 006c DF91      		pop r29
 993 006e CF91      		pop r28
 994 0070 1F91      		pop r17
 995 0072 0F91      		pop r16
 996               	.LVL73:
 997 0074 FF90      		pop r15
 998 0076 EF90      		pop r14
 999 0078 DF90      		pop r13
 1000 007a CF90      		pop r12
 1001               	.LVL74:
 1002 007c 0895      		ret
 1003               		.cfi_endproc
 1004               	.LFE28:
 1006               		.section	.text.layer_switch_get_action,"ax",@progbits
 1007               	.global	layer_switch_get_action
 1009               	layer_switch_get_action:
 1010               	.LFB29:
 313:./tmk_core/common/action_layer.c **** 
 314:./tmk_core/common/action_layer.c **** /** \brief Layer switch get layer
 315:./tmk_core/common/action_layer.c ****  *
 316:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 317:./tmk_core/common/action_layer.c ****  */
 318:./tmk_core/common/action_layer.c **** action_t layer_switch_get_action(keypos_t key)
 319:./tmk_core/common/action_layer.c **** {
 1011               		.loc 1 319 0
 1012               		.cfi_startproc
 1013               	.LVL75:
 1014 0000 CF93      		push r28
 1015               	.LCFI28:
 1016               		.cfi_def_cfa_offset 3
 1017               		.cfi_offset 28, -2
 1018 0002 DF93      		push r29
 1019               	.LCFI29:
 1020               		.cfi_def_cfa_offset 4
 1021               		.cfi_offset 29, -3
 1022               	/* prologue: function */
 1023               	/* frame size = 0 */
 1024               	/* stack size = 2 */
 1025               	.L__stack_usage = 2
 1026 0004 EC01      		movw r28,r24
 320:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 1027               		.loc 1 320 0
 1028 0006 0E94 0000 		call layer_switch_get_layer
 1029               	.LVL76:
 1030 000a BE01      		movw r22,r28
 1031 000c 0E94 0000 		call action_for_key
 1032               	.LVL77:
 1033               	/* epilogue start */
 321:./tmk_core/common/action_layer.c **** }
 1034               		.loc 1 321 0
 1035 0010 DF91      		pop r29
 1036 0012 CF91      		pop r28
 1037               	.LVL78:
 1038 0014 0895      		ret
 1039               		.cfi_endproc
 1040               	.LFE29:
 1042               		.section	.text.store_or_get_action,"ax",@progbits
 1043               	.global	store_or_get_action
 1045               	store_or_get_action:
 1046               	.LFB27:
 265:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1047               		.loc 1 265 0
 1048               		.cfi_startproc
 1049               	.LVL79:
 1050 0000 1F93      		push r17
 1051               	.LCFI30:
 1052               		.cfi_def_cfa_offset 3
 1053               		.cfi_offset 17, -2
 1054 0002 CF93      		push r28
 1055               	.LCFI31:
 1056               		.cfi_def_cfa_offset 4
 1057               		.cfi_offset 28, -3
 1058 0004 DF93      		push r29
 1059               	.LCFI32:
 1060               		.cfi_def_cfa_offset 5
 1061               		.cfi_offset 29, -4
 1062               	/* prologue: function */
 1063               	/* frame size = 0 */
 1064               	/* stack size = 3 */
 1065               	.L__stack_usage = 3
 1066 0006 EB01      		movw r28,r22
 267:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 1067               		.loc 1 267 0
 1068 0008 9091 0000 		lds r25,disable_action_cache
 1069 000c 9923      		tst r25
 1070 000e 01F0      		breq .L46
 268:./tmk_core/common/action_layer.c ****     }
 1071               		.loc 1 268 0
 1072 0010 CB01      		movw r24,r22
 1073               	.LVL80:
 1074 0012 0E94 0000 		call layer_switch_get_action
 1075               	.LVL81:
 1076 0016 00C0      		rjmp .L47
 1077               	.LVL82:
 1078               	.L46:
 273:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 1079               		.loc 1 273 0
 1080 0018 8823      		tst r24
 1081 001a 01F0      		breq .L48
 274:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 1082               		.loc 1 274 0
 1083 001c CB01      		movw r24,r22
 1084               	.LVL83:
 1085 001e 0E94 0000 		call layer_switch_get_layer
 1086               	.LVL84:
 1087 0022 182F      		mov r17,r24
 1088               	.LVL85:
 275:./tmk_core/common/action_layer.c ****     }
 1089               		.loc 1 275 0
 1090 0024 682F      		mov r22,r24
 1091               	.LVL86:
 1092 0026 CE01      		movw r24,r28
 1093 0028 0E94 0000 		call update_source_layers_cache
 1094               	.LVL87:
 1095 002c 00C0      		rjmp .L49
 1096               	.LVL88:
 1097               	.L48:
 278:./tmk_core/common/action_layer.c ****     }
 1098               		.loc 1 278 0
 1099 002e CB01      		movw r24,r22
 1100               	.LVL89:
 1101 0030 0E94 0000 		call read_source_layers_cache
 1102               	.LVL90:
 1103 0034 182F      		mov r17,r24
 1104               	.LVL91:
 1105               	.L49:
 280:./tmk_core/common/action_layer.c **** #else
 1106               		.loc 1 280 0
 1107 0036 BE01      		movw r22,r28
 1108 0038 812F      		mov r24,r17
 1109 003a 0E94 0000 		call action_for_key
 1110               	.LVL92:
 1111               	.L47:
 1112               	/* epilogue start */
 284:./tmk_core/common/action_layer.c **** 
 1113               		.loc 1 284 0
 1114 003e DF91      		pop r29
 1115 0040 CF91      		pop r28
 1116               	.LVL93:
 1117 0042 1F91      		pop r17
 1118 0044 0895      		ret
 1119               		.cfi_endproc
 1120               	.LFE27:
 1122               	.global	source_layers_cache
 1123               		.section	.bss.source_layers_cache,"aw",@nobits
 1126               	source_layers_cache:
 1127 0000 0000 0000 		.zero	50
 1127      0000 0000 
 1127      0000 0000 
 1127      0000 0000 
 1127      0000 0000 
 1128               	.global	layer_state
 1129               		.section	.bss.layer_state,"aw",@nobits
 1132               	layer_state:
 1133 0000 0000 0000 		.zero	4
 1134               	.global	default_layer_state
 1135               		.section	.bss.default_layer_state,"aw",@nobits
 1138               	default_layer_state:
 1139 0000 0000 0000 		.zero	4
 1140               		.text
 1141               	.Letext0:
 1142               		.file 2 "/usr/lib/avr/include/stdint.h"
 1143               		.file 3 "./tmk_core/common/keyboard.h"
 1144               		.file 4 "./tmk_core/common/action_code.h"
 1145               		.file 5 "./tmk_core/common/action.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_layer.c
     /tmp/ccocLSGP.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccocLSGP.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccocLSGP.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccocLSGP.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccocLSGP.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccocLSGP.s:13     .text.default_layer_state_set_kb:0000000000000000 default_layer_state_set_kb
     /tmp/ccocLSGP.s:30     .text.default_layer_state_set:0000000000000000 default_layer_state_set
     /tmp/ccocLSGP.s:1138   .bss.default_layer_state:0000000000000000 default_layer_state
     /tmp/ccocLSGP.s:56     .text.default_layer_debug:0000000000000000 default_layer_debug
     /tmp/ccocLSGP.s:71     .text.default_layer_set:0000000000000000 default_layer_set
     /tmp/ccocLSGP.s:89     .text.default_layer_or:0000000000000000 default_layer_or
     /tmp/ccocLSGP.s:129    .text.default_layer_and:0000000000000000 default_layer_and
     /tmp/ccocLSGP.s:169    .text.default_layer_xor:0000000000000000 default_layer_xor
     /tmp/ccocLSGP.s:209    .text.layer_state_set_user:0000000000000000 layer_state_set_user
     /tmp/ccocLSGP.s:226    .text.layer_state_set_kb:0000000000000000 layer_state_set_kb
     /tmp/ccocLSGP.s:244    .text.layer_state_set:0000000000000000 layer_state_set
     /tmp/ccocLSGP.s:1132   .bss.layer_state:0000000000000000 layer_state
     /tmp/ccocLSGP.s:270    .text.layer_clear:0000000000000000 layer_clear
     /tmp/ccocLSGP.s:290    .text.layer_state_cmp:0000000000000000 layer_state_cmp
     /tmp/ccocLSGP.s:334    .text.layer_state_is:0000000000000000 layer_state_is
     /tmp/ccocLSGP.s:357    .text.layer_move:0000000000000000 layer_move
     /tmp/ccocLSGP.s:405    .text.layer_on:0000000000000000 layer_on
     /tmp/ccocLSGP.s:462    .text.layer_off:0000000000000000 layer_off
     /tmp/ccocLSGP.s:523    .text.layer_invert:0000000000000000 layer_invert
     /tmp/ccocLSGP.s:580    .text.layer_or:0000000000000000 layer_or
     /tmp/ccocLSGP.s:620    .text.layer_and:0000000000000000 layer_and
     /tmp/ccocLSGP.s:660    .text.layer_xor:0000000000000000 layer_xor
     /tmp/ccocLSGP.s:700    .text.layer_debug:0000000000000000 layer_debug
     /tmp/ccocLSGP.s:715    .text.update_source_layers_cache:0000000000000000 update_source_layers_cache
     /tmp/ccocLSGP.s:1126   .bss.source_layers_cache:0000000000000000 source_layers_cache
     /tmp/ccocLSGP.s:803    .text.read_source_layers_cache:0000000000000000 read_source_layers_cache
     /tmp/ccocLSGP.s:887    .text.layer_switch_get_layer:0000000000000000 layer_switch_get_layer
     /tmp/ccocLSGP.s:1009   .text.layer_switch_get_action:0000000000000000 layer_switch_get_action
     /tmp/ccocLSGP.s:1045   .text.store_or_get_action:0000000000000000 store_or_get_action

UNDEFINED SYMBOLS
clear_keyboard_but_mods
action_for_key
disable_action_cache
__do_clear_bss
